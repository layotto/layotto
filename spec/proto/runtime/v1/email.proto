syntax = "proto3";

package spec.proto.runtime.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

option go_package = "mosn.io/layotto/spec/proto/runtime/v1;runtime";

service EmailTemplateService {

  // Send an email with template
  rpc SendEmailWithTemplate(SendEmailWithTemplateRequest) returns (SendEmailWithTemplateResponse) {}

}

service EmailService {

  // Send an email.
  rpc SendEmail(SendEmailRequest) returns (SendEmailResponse) {}

}

// SendEmailWithTemplateRequest is the message send to email.
message SendEmailWithTemplateRequest {

  // The saas service name, like 'aliyun.email'/'aws.ses'/'...'
  //  If your system uses multiple IVR services at the same time,
  //  you can specify which service to use with this field.
  string service_name = 1;

  // Required.
  EmailTemplate template = 2;

  // Required. The Email subject.
  string subject = 3;

  // Required.
  EmailAddress address = 4;

}

message EmailAddress{

  // Required. The Email sender address.
  string from = 1;

  // Required. The Email destination addresses.
  repeated string to = 2;

  // Optional. To whom the mail is cc
  repeated string cc = 3;
}

message EmailTemplate{

  // Required
  string template_id = 1;

  // Required
  map<string, string>  template_params = 2;

}

message SendEmailWithTemplateResponse {

  // The saas requestId.
  string request_id = 1;

}

// SendEmailRequest is the message send to email.
message SendEmailRequest {

  // The saas service name, like 'aliyun.email'/'aws.ses'/'...'
  //  If your system uses multiple IVR services at the same time,
  //  you can specify which service to use with this field.
  string service_name = 1;

  // Required.
  string setting_id = 2;

  // Required. The Email subject.
  string subject = 3;

  //  Required.
  Content content = 4;

  // Required.
  EmailAddress address = 5;

}

message Content{

  // Required.
  string text = 1;

}


message SendEmailResponse {

  // The saas requestId.
  string request_id = 1;

}
