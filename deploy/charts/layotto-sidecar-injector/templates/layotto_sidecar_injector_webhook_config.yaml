{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace "layotto-sidecar-injector-cert"}}
{{- $existingWebHookConfig := lookup "admissionregistration.k8s.io/v1" "MutatingWebhookConfiguration" .Release.Namespace "layotto-sidecar-injector"}}
{{- $ca := genCA "layotto-sidecar-injector-ca" 3650 }}
{{- $cn := printf "layotto-sidecar-injector" }}
{{- $altName1 := printf "layotto-sidecar-injector.%s" .Release.Namespace }}
{{- $altName2 := printf "layotto-sidecar-injector.%s.svc" .Release.Namespace }}
{{- $altName3 := printf "layotto-sidecar-injector.%s.svc.cluster" .Release.Namespace }}
{{- $altName4 := printf "layotto-sidecar-injector.%s.svc.cluster.local" .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2 $altName3 $altName4) 3650 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: layotto-sidecar-injector-cert
  namespace: {{ .Release.Namespace }}
  labels:
    app: layotto-sidecar-injector
data:
  {{ if $existingSecret }}tls.crt: {{ index $existingSecret.data "tls.crt" }}
  {{ else }}tls.crt: {{ b64enc $cert.Cert }}
  {{ end }}

  {{ if $existingSecret }}tls.key: {{ index $existingSecret.data "tls.key" }}
  {{ else }}tls.key: {{ b64enc $cert.Key }}
  {{ end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: layotto-sidecar-injector
  labels:
    app: layotto-sidecar-injector
webhooks:
- name: sidecar-injector.layotto.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: layotto-sidecar-injector
      path: "/mutate"
      port: 443
    caBundle: {{ if $existingWebHookConfig }}{{ (index $existingWebHookConfig.webhooks 0).clientConfig.caBundle }}{{ else }}{{ b64enc $ca.Cert }}{{ end }}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - pods
    operations:
    - CREATE
  failurePolicy: {{ .Values.webhookFailurePolicy }}
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
